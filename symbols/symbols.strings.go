// Code generated by "stringer -type=SymbolType -output=symbols.strings.go"; DO NOT EDIT.

package symbols

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Comma-101]
	_ = x[Period-102]
	_ = x[SemiColon-103]
	_ = x[Equals-104]
	_ = x[NotEquals-105]
	_ = x[LessThan-106]
	_ = x[GreaterThan-107]
	_ = x[LessThanOrEqualTo-108]
	_ = x[GreaterThanOrEqualTo-109]
	_ = x[LeftParentheses-110]
	_ = x[RightParentheses-111]
	_ = x[Plus-112]
	_ = x[Minus-113]
	_ = x[Division-114]
	_ = x[Multiply-115]
	_ = x[Modulo-116]
	_ = x[Pipe-117]
	_ = x[StringConcatenation-118]
}

const _SymbolType_name = "CommaPeriodSemiColonEqualsNotEqualsLessThanGreaterThanLessThanOrEqualToGreaterThanOrEqualToLeftParenthesesRightParenthesesPlusMinusDivisionMultiplyModuloPipeStringConcatenation"

var _SymbolType_index = [...]uint8{0, 5, 11, 20, 26, 35, 43, 54, 71, 91, 106, 122, 126, 131, 139, 147, 153, 157, 176}

func (i SymbolType) String() string {
	i -= 101
	if i >= SymbolType(len(_SymbolType_index)-1) {
		return "SymbolType(" + strconv.FormatInt(int64(i+101), 10) + ")"
	}
	return _SymbolType_name[_SymbolType_index[i]:_SymbolType_index[i+1]]
}
