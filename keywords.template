var (
    _ Keyword = {{.Keyword}}{}
    _{{.Keyword}}_STR = strings.ToUpper("{{.Keyword}}")
)

func New{{.Keyword}}Keyword(value string) Keyword {
    if strings.ToUpper(value) != _{{.Keyword}}_STR {
        panic("cannot create keyword {{.Keyword}} from " + value)
    }

    return {{.Keyword}}{
        Value: value,
    }
}

// {{.Keyword}} is a pgoparser keyword.
type {{.Keyword}} struct {
    Value string
}

// Token implements the Token interface for {{.Keyword}}.
func (keyword {{.Keyword}}) Token() {}

// Word implements the Word interface for {{.Keyword}}.
func (keyword {{.Keyword}}) Word() {}

// Keyword implements the Keyword interface for {{.Keyword}}.
func (keyword {{.Keyword}}) Keyword() {}

// String returns the actual input string representation of the word.
func (keyword {{.Keyword}}) String() string {
    return keyword.Value
}
